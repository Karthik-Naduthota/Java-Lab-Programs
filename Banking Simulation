package Customer;

public class InsufficientBalanceException extends Exception {
    public InsufficientBalanceException(String message) {
        super(message);
    }
}
package Customer;

public class Custom {
    private String accountNo;
    private String name;
    private double balance;

    public Custom(String accountNo, String name, double balance) {
        this.accountNo = accountNo;
        this.name = name;
        this.balance = balance;
    }

    public Custom(int i, String name, double balance) {
        this.accountNo = String.valueOf(i);
        this.name = name;
        this.balance = balance;
    }

    public void deposit(double amount) {
        if (amount <= 0.0) {
            System.out.println("Deposit amount must be positive.");
            return;
        }
        this.balance += amount;
        System.out.println("Amount deposited successfully.");
    }

    public void withdraw(double amount) throws InsufficientBalanceException {
        if (amount <= 0.0) {
            throw new ArithmeticException("Withdrawal amount must be positive.");
        } else if (amount > this.balance) {
            throw new InsufficientBalanceException("Insufficient balance.");
        } else {
            this.balance -= amount;
            System.out.println("Amount withdrawn successfully.");
        }
    }
package Customer;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Custom custom = new Custom(1001, "Rohan", 5000.0);

        while (true) {
            System.out.println("\nBank Menu");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Show Balance");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");

            try {
                int choice = scanner.nextInt();

                switch (choice) {
                    case 1:
                        System.out.print("Enter amount to deposit: ");
                        double depositAmount = scanner.nextDouble();
                        custom.deposit(depositAmount);
                        break;

                    case 2:
                        System.out.print("Enter amount to withdraw: ");
                        double withdrawAmount = scanner.nextDouble();
                        custom.withdraw(withdrawAmount);
                        break;

                    case 3:
                        custom.display();
                        break;

                    case 4:
                        System.out.println("Thank you for using the banking system.");
                        scanner.close();
                        System.exit(0);

                    default:
                        System.out.println("Invalid option! Please choose between 1-4.");
                }

            } catch (InputMismatchException e) {
                System.out.println("Invalid input! Please enter numeric values.");
                scanner.nextLine(); // clear invalid input
            } catch (InsufficientBalanceException | ArithmeticException e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
    }
}
    public void display() {
        System.out.println("Account Number: " + this.accountNo);
        System.out.println("Account Holder: " + this.name);
        System.out.println("Current Balance: " + this.balance);
    }
}
